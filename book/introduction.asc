[preface]
== 簡介

你將花費你生命中若干個小時的時間來閱讀這本有關 Git 的書，讓我們先用幾分鐘的時間來介紹一下我們為你準備的東西。以下是本書十個主要章節以及三篇附錄的大綱。
You’re about to spend several hours of your life reading about Git. Let’s take a minute to explain
what we have in store for you. Here is a quick summary of the ten chapters and three appendices of this book.

在「第一章」我們將介紹版本控制系統（VCSs）和 Git 的基本概念：不涉及技術內容，僅介紹什麼是 Git，為什麼它會成為 VCSs 大家庭中的一員，它與其它 VCSs 的區別，以及為什麼那麼多人都在使用 Git。
然後，如果你的系統還沒有安裝 Git，我們將介紹如何下載 Git 以及如何進行設定。
In *Chapter 1*, we’re going to cover Version Control Systems (VCSs) and Git basics—no
technical stuff, just what Git is, why it came about in a land full of VCSs, what sets it apart, and
why so many people are using it. Then, we’ll explain how to download Git and set it up for the
first time if you don’t already have it on your system.

在「第二章」，我們將闡述 Git 的基本使用：如何在您可能遇到的 80% 情況中使用 Git。
在閱讀這個章節以後，您應該就會克隆（clone）倉庫、查看項目歷史、修改文件和貢獻更改。
假設這本書在你看完這個章節後就毀損，那麼到這裡為止的知識也足夠你運用到你重新去買一本新書的時候。
In *Chapter 2*, we will go over basic Git usage—how to use Git in the 80% of cases you’ll
encounter most often. After reading this chapter, you should be able to clone a repository, see
what has happened in the history of the project, modify files, and contribute changes. If the book
spontaneously combusts at this point, you should already be pretty useful wielding Git in the time
it takes you to go pick up another copy.

*第三章* 關注於 Git 的分支模型。分支模型通常被認為是 Git 的殺手級特性。這裡，您將學習到究竟是什麼讓 Git
與眾不同。學習完本章，您可能需要一段時間來思考，在 Git 分支成為您的生活的一部分之前，您到底是如何生活的。
*Chapter 3* is about the branching model in Git, often described as Git’s killer feature. Here
you’ll learn what truly sets Git apart from the pack. When you’re done, you may feel the need to
spend a quiet moment pondering how you lived before Git branching was part of your life.

*第四章* 關注於服務器端的 Git。本章面向那些希望在您自己的組織或個人服務器搭建用於合作的 Git 的讀者。
如果您希望讓別人處理這些事務，我們也會探討一些託管選項。
*Chapter 4* will cover Git on the server. This chapter is for those of you who want to set up Git
inside your organization or on your own personal server for collaboration. We will also explore
various hosted options if you prefer to let someone else handle that for you.

*第五章* 將闡述多種分佈式工作流的細節，以及如何使用 Git 實現它們。學習完本章，您應該能夠在多個遠程倉庫
之間遊刃有餘，通過電子郵件使用 Git，熟練地處理多個遠程分支和合作者貢獻的補丁。
*Chapter 5* will go over in full detail various distributed workflows and how to accomplish
them with Git. When you are done with this chapter, you should be able to work expertly with
multiple remote repositories, use Git over e-mail and deftly juggle numerous remote branches
and contributed patches.

*第六章* 介紹 GitHub 託管服務以及深層次的工具。我們將涵蓋註冊與賬戶管理，創建和使用 Git 倉庫，貢獻項目的
普通工作流以及接受他人的貢獻，GitHub 的可編程接口和那些能夠讓您的生活變得更簡單的小技巧。
*Chapter 6* covers the GitHub hosting service and tooling in depth. We cover signing up for and managing an account, creating and using Git repositories, common workflows to contribute to projects and to accept contributions to yours, GitHub's programmatic interface and lots of little tips to make your life easier in general.

*第七章* 關於 Git 的高級命令。您將學習到一些高級主題，諸如掌握可怕的「reset」命令，使用二分搜索識別錯誤，編輯
歷史，細節版本選擇等等。本章的介紹將豐富您的 Git 知識，讓您成為一個真正的大師。
*Chapter 7* is about advanced Git commands. Here you will learn about topics like mastering the scary 'reset' command, using binary
search to identify bugs, editing history, revision selection in detail, and a lot more. This
chapter will round out your knowledge of Git so that you are truly a master.

*第八章* 關於 Git 環境的自定義配置，包括設置用於增強或促進自定義策略的鉤子腳本以及按照您所需要的方式進行
工作的環境配置。我們還會介紹構建您自己的腳本集，以增強自定義提交策略。
*Chapter 8* is about configuring your custom Git environment. This includes setting up hook
scripts to enforce or encourage customized policies and using environment configuration settings
so you can work the way you want to. We will also cover building your own set of scripts to
enforce a custom committing policy.

*第九章* 對比 Git 和其它 VCSs，包括在 Subversion（SVN）的世界使用 Git 以及從其它 VCSs 遷移到 Git。很多組織
仍在使用 SVN，並且也沒有計畫改變，此時，您將瞭解到 Git 不可思議的能力——本章將展示，在您不得不使用 SVN 服務器
的時候如何協同合作。我們還將介紹如何從不同系統導入項目，以便您能夠全身心投入 Git 的懷抱。
*Chapter 9* deals with Git and other VCSs. This includes using Git in a Subversion (SVN) world
and converting projects from other VCSs to Git. A lot of organizations still use SVN and are
not about to change, but by this point you’ll have learned the incredible power of Git—and this
chapter shows you how to cope if you still have to use a SVN server. We also cover how to
import projects from several different systems in case you do convince everyone to make the
plunge.

*第十章* 深入 Git 陰暗而漂亮的實現細節。現在，您已經知道所有有關 Git 的知識，能夠熟練運用 Git 的強大優雅的功能。
接下來，您可以繼續學習 Git 如何存儲對象、Git 的對象模型是怎樣的、打包文件的細節、服務器協議等更多知識。
本書自始至終都將引用本章的內容，以便您能夠在當時就可以深入瞭解。但是，如果您像我一樣希望深入學習技術細節，
您可能想先閱讀第十章。我們將選擇權交給您。
*Chapter 10* delves into the murky yet beautiful depths of Git internals. Now that you know all
about Git and can wield it with power and grace, you can move on to discuss how Git stores its objects,
what the object model is, details of packfiles, server protocols, and more. Throughout the book,
we will refer to sections of this chapter in case you feel like diving deep at that point;
but if you are like us and want to dive into the technical details, you may want to read Chapter 10 first.
We leave that up to you.

在 *附錄 A*，我們學習多個在特定環境中使用 Git 的實例。我們涵蓋多個您可能會使用 Git 的多個 GUI 和 IDE 編程環境，
這些都可以由您自己選擇。如果您想在 shell、Visual Studio 或 Eclipse 中使用 Git，請閱讀本章。
In *Appendix A* we look at a number of examples of using Git in various specific environments. We cover
a number of different GUIs and IDE programming environments that you may want to use Git in and what
is available for you. If you're interested in an overview of using Git in your shell, in Visual Studio
or Eclipse, take a look here.

在 *附錄 B*，我們探討通過類似 libgit2 和 JGit 的工具編寫 Git 腳本、擴展 Git。如果您對編寫複雜、快速的自定義工具感興趣，
需要瞭解 Git 的底層訪問，本章就是您所需要瞭解的。
In *Appendix B* we explore scripting and extending Git through tools like libgit2 and JGit. If you're
interested in writing complex and fast custom tools and need low level Git access, this is where you can
see what that landscape looks like.

最後在 *附錄 C*，我們一次性瀏覽 Git 的所有主要命令，複習在本書中介紹的內容，回憶我們能夠使用這些命令做什麼。
如果您需要知道本書中我們使用了哪些特定 Git 命令，您可以在這裡查閱。
Finally in *Appendix C* we go through all the major Git commands one at a time and review where in the book
we covered them and what we did with them. If you want to know where in the book we used any specific Git
command you can look that up here.

下面讓我們開始。
Let’s get started.
